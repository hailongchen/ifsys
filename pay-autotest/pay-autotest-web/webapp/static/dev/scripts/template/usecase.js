/** * Created by marszed on 16/3/10. */define(function(require, exports, module) {	var template = require('template'),		$ = require('jquery'),		common = require('common'),		global = require('global'),		layer = require('layer'),		zclip = require('zclip'),		intInfo = require('intInfo'),		int = new intInfo.intInfoInit(),		$sliderRight = $('#sliderRight'),		GiGoldPay = new common.GiGoldPay(),		GiGoldTool = new global.GiGoldTool();	var $bdLeft = $('#bdLeft'),		$bdRight = $('#bdRight'),		resResLock = false;	resCodeLock = false,//响应吗锁		saveModuleLock = false,//依赖保存锁		delModuleLock = false;//依赖删除锁	//添加用例信息	$('#addUsecase').click(function(){		var ifId = $(this).attr('ifId');		if(ifId){			getResCode(ifId);		} else {			layer.tips('请先选择接口',$(this));		}	});	//保存新增用例信息,入参,出参默认未空对象	$('#hdRight').on('click','#saveCase',function(){		var resCode = $('#newCaseList').find('span').attr('rspcodeid'),			val = $('#newCaseList').find('input').val(),			ifId = $('#addUsecase').attr('ifId');		if(resCode && val && ifId){			int.sendUseCase({				caseName: val+"",				checkJson: "",				id: "",				ifId: ifId+"",				requestJson: "{}",				responseJson: "{}",				rspCodeId: resCode+"",				rspRefJson: ""			});		} else {			layer.msg('缺少新增用例信息!!!');		}	});	//新增用例信息,选择响应码	$('#hdRight').on('click','.newCaseSelect > li > a',function(){		var $this = $(this),			rspcodeid = $this.attr('rspcodeid')-0;		if(rspcodeid){			$('#hdRight').find('.newCaseChoose').html($this.html()+'&nbsp;<span class="caret" rspcodeid='+rspcodeid+'></span>');		}	});	//获取接口响应码信息	function getResCode(obj){		if(!resCodeLock){			resCodeLock = true;			GiGoldPay.ajaxHandler({				"url": GiGoldPay.ipBullShit()+"/autotest/autotest/getrspcdbyifid.do",				"data": {					'ifId': obj+''				},				"onSuccess":function(_data) {					if (_data.rspCd == "00000") {						//开始进入添加用例信息状态清空其他信息						$('#require, #response, #msgModule,#useCaseList,#interfaceModuleCt').empty();						var html = template('newCaseListBox',_data);						document.getElementById('newCaseList').innerHTML = html;						resCodeLock = false;					} else {						GiGoldPay.cancleLock(resCodeLock);					}				},				"onError":function(data) {					GiGoldPay.cancleLock(resCodeLock);				}			});		}	}	//请求,响应参数修改	$bdLeft.on('click','.change-data',function(){		var $textarea = $(this).parent().siblings('.over-box').find('.area');		if($textarea.attr('contenteditable') == 'false'){			$textarea.removeAttr('readonly').toggleClass('readonly-bg').attr('contenteditable','true');		}else{			$textarea.toggleClass('readonly-bg').attr({'contenteditable':'false','readonly':'true'});		}	});	//请求,响应参数保存	$bdLeft.on('click','.save-data',function(){		var $this = $(this),			reqHtml = $('#require').find('.area').html(),			resHtml = $('#response').find('.area').html();		var saveData = {			caseName: $this.attr('caseName'),			checkJson: $this.attr('checkJson'),			id: $this.attr('caseId')+'',			ifId: $this.attr('ifId')+'',			requestJson: reqHtml || '',			responseJson: resHtml || '',			rspRefJson: $this.attr('rspRefJson')+''		};		if(!saveData.id || !saveData.ifId || !saveData.requestJson || !saveData.responseJson){			layer.tips('缺少必要信息!',$(this));			return false;		}		if(!resResLock){			resResLock = true;			GiGoldPay.ajaxHandler({				"url": GiGoldPay.ipBullShit()+"/autotest/autotest/updateifsysmock.do",				"data": saveData,				"onSuccess":function(data) {					if (data.rspCd == "00000") {						resResLock = false;						layer.msg('保存信息成功');					} else {						layer.msg('保存信息失败');						GiGoldPay.cancleLock(sendCaseLock);					}				},				"onError":function(data) {					layer.msg('保存信息失败');					GiGoldPay.cancleLock(resResLock);				}			});		}	});	//报文依赖新增,删除操作	$bdRight.on('click','.add-module, .del-module',function(){		var $this = $(this);		if($this.hasClass('add-module')){			var copyHtml = '<tr>' +				'<td class="form-group"><input type="text" class="form-control" placeholder="请输入占位符"></td>' +				'<td><div class="btn-group moduleSelect">'+$this.parents('tr').find('.moduleSelect').html()+'</div></td>'+				'<td class="form-group">'+				'<input type="text" class="form-control" placeholder="请输入依赖字段">'+				'</td>'+				'<td class="no-wrap">'+				'<button type="button" class="add-module btn btn-primary" style="margin-right: 5px;">+</button>'+				'<button type="button" class="del-module btn btn-warning">-</button>'+				'</td>'+				'</tr>';			$this.parents('tr').after(copyHtml);		} else {			var delid = $this.parents('tr').find('.caret').attr('delid');			if(!delModuleLock && delid){				delModuleLock = true;				GiGoldPay.ajaxHandler({					"url": GiGoldPay.ipBullShit()+"/autotest/autotest/deleteFieldRefer.do",					"data": {						'id': delid+''					},					"onSuccess":function(_data) {						if (_data.rspCd == "00000") {							$this.closest('tr').remove();							layer.msg('删除成功');							delModuleLock = false;						} else {							layer.msg('删除失败,请重试');							GiGoldPay.cancleLock(delModuleLock);						}					},					"onError":function(data) {						GiGoldPay.cancleLock(delModuleLock);					}				});			} else {				layer.tips('缺少依赖ID');			}		}	});	//报文依赖新增依赖	$bdRight.on('click','.moduleSelect > li',function(){		var $this = $(this),			char = $this.find('a').attr('char');		$this.parent().siblings('button').html($this.find('a').html()+'&nbsp;<span class="caret" mockid='+$this.find('a').attr('mockid')+' refmockid='+$this.find('a').attr('refmockid')+'></span>');	});	//报文依赖保存	$bdRight.on('click','#saveModule',function(){		var data = [];		var $tr = $('#msgModule').find('tr');		for(var i = 0, len = $tr.length; i < len; i++){			var temp  = $($tr[i]);			if(temp.find('input').eq(0).val() && temp.find('input').eq(1).val() && temp.find('.caret').attr('mockid') && temp.find('.caret').attr('refmockid')){				data.push({					'mockid': temp.find('.caret').attr('mockid') - 0,					'ref_mock_id': temp.find('.caret').attr('refmockid') - 0,					'ref_feild': temp.find('input').eq(1).val() + '',					'alias': temp.find('input').eq(0).val() + '',					'status': 'Y'				});			}else{				layer.msg('请正确填写新增报文依赖');				return false;			}		}		if(!saveModuleLock ){			saveModuleLock = true;			GiGoldPay.ajaxHandler({				"url": GiGoldPay.ipBullShit()+"/autotest/autotest/addFieldRefer.do",				"data": {					"referList": data				},				"onSuccess":function(_data) {					if (_data.rspCd == "00000") {						layer.msg('保存成功');						saveModuleLock = false;					} else {						GiGoldPay.cancleLock(saveModuleLock);					}				},				"onError":function(data) {					GiGoldPay.cancleLock(saveModuleLock);				}			});		}	});	//请求参数,响应参数插入占位符	$bdLeft.on('click','.reqInsertChar > li, .resInsertChar > li',function(){		var $this = $(this),			char = $this.find('a').attr('char');		$this.parent().siblings('button').html($this.find('a').html()+'&nbsp;<span class="caret"></span>');		insertChar({			dom: $this.parents('.muted').next().find('.area'),			char: char		});	});	//插入占位符	function insertChar(data){		if(data.dom && data.dom.hasClass('readonly-bg')){			layer.msg('请先点击修改按钮');			return false;		}		var obj= data.dom;		var range, node;		if(!obj.is(":focus")) {			obj.focus();		}		if(window.getSelection && window.getSelection().getRangeAt) {			range = window.getSelection().getRangeAt(0);			range.collapse(false);			node = range.createContextualFragment(data.char);			var c = node.lastChild;			range.insertNode(node);			if(c){				range.setEndAfter(c);				range.setStartAfter(c)			}			var j = window.getSelection();			j.removeAllRanges();			j.addRange(range);		} else if (document.selection && document.selection.createRange) {			document.selection.createRange().pasteHTML(data.char);		}	}	/* 定义所有class为copy-input标签，点击后可复制class为input的文本 */	//$(function(){	//	$("#hdCenter .open-box").on("beforecopy copy aftercopy", function(e) {	//		console.log("Direct binding - " + e.type + " - #" + e.target.id);	//		console.dir(e);	//	}).on("copy", function(e) {	//		console.log('--->>>');	//		e.clipboardData.clearData();	//		e.clipboardData.setData("text/plain", "shit");	//		e.clipboardData.setData("text/html", "<b>shit</b>");	//		e.preventDefault();	//	});	//});	function useCaseDetail(){};	//fixUpdateTable.useCaseDetail({});	module.exports = {		useCaseDetail: useCaseDetail	};});
/** * Created by marszed on 16/3/8. */define(function(require, exports, module){	var template = require('template'),		$ = require('jquery'),		intInfo = require('intInfo'),		int = new intInfo.intInfoInit(),		common = require('common'),		GiGoldPay = new common.GiGoldPay(),		$slider = $('#slider');	var proSysInfoLock = false;//请求左侧菜单栏接口信息锁	//选择产品 -> 更新接口信息列表	$slider.on('click','.choosePro > li > a',function(){		var $this = $(this),			sysid = $this.attr('sysid');		if(sysid){			int.cleanCache();			int.cleanCaseDome();			$('#hdLeftBox').empty();			$slider.find('.chooseProVal').html($this.html()+'&nbsp;<span class="caret"></span>').attr('proid',$this.attr('proid'));			int.updateInterface({				data: {					ifName: "",					ifProId: $this.attr('proid'),					ifSysId: sysid,					pageNum: 1				}			});		}	});	function proInfoInit(){};	//根据系统id获取产品信息	proInfoInit.prototype.updateProInfo = function(obj){		if(!proSysInfoLock){			proSysInfoLock = true;			GiGoldPay.ajaxHandler({				"url": obj.url || GiGoldPay.ipBullShit()+"/autotest/getProInfoBySysId.do",				"data": obj.data || {},				"onSuccess":function(data){					if (data.rspCd == "00000") {						proSysInfoLock = false;						if(data.proList.length){							//渲染弹层模版->产品							var html = template('fixProBox',data);							document.getElementById('fixChoosePro').innerHTML = html;							renderByJson(data.proList);						}					} else {						GiGoldPay.cancleLock(proSysInfoLock);					}				},				"onError": function(data){					GiGoldPay.cancleLock(proSysInfoLock);				}			});		}	};	//渲染选取选择系统模板	function renderByJson(data){		console.log(data);		var proHtml = '<button type="button" class="btn btn-default dropdown-toggle chooseProVal" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">请选择产品&nbsp;<span class="caret"></span></button>'+			'<ul class="dropdown-menu choosePro">'+			'{{ each data as obj i}}'+			'<li><a href="javascript:;" sysId="{{obj.sysId}}" proId="{{ obj.id }}">{{ obj.proName }}</a></li>'+			'{{/each}}'+			'</ul>';		var render = template.compile(proHtml);		var html = render({			data: data		});		document.getElementById('proInfo').innerHTML = html;	};	//左侧侧栏接口列表初始化	var sliderProInfo = new proInfoInit();	sliderProInfo.updateProInfo({});	//暴露接口,以供后续局部刷新	module.exports = {		proInfoInit: proInfoInit	}});